from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

from sqldaogenerator.common.transaction_holder import register_session_maker
from sqldaogenerator.entity.General import General
from sqldaogenerator.entity.base import Base

"""This file is generated by sqldao-generator; you can modify connection properties yourself, but don't modify the set_not_none function."""


class {name}:

    def __init__(self):
        user = '{user}'
        password = '{password}'
        host = '{host}'
        port = {port}
        dbname = '{dbname}'
        connection_string = f"mysql+mysqlconnector://{{user}}:{{password}}@{{host}}:{{port}}/{{dbname}}"
        self.engine = create_engine(connection_string, echo=True, pool_recycle=270)
        self.Session = sessionmaker(bind=self.engine)
        register_session_maker(self.Session)

    def set_not_none(self, entity: Base, model: General, *criterion: str):
        for value in criterion:
            if model[value] is not None:
                exec(f"entity.{{value}}=model.{{value}}")
